function initWebappServiceWorker(){var r="@relprefix@".replace("---","").replace(/^\//,""),n=-1===r.indexOf("/"),s="makecode;"+r+";@pxtRelId@",t="@cdnUrl@",e=["@targetUrl@/"+r,"@simUrl@","/docs/semantic.js","/docs/main.js","/docs/pxtapp.js","/docs/typescript.js","/docs/marked/marked.min.js","/docs/highlight.js/highlight.pack.js","/docs/jquery.js","/docs/pxtlib.js","/docs/pxtcompiler.js","/docs/pxtpy.js","/docs/pxtblockly.js","/docs/pxtwinrt.js","/docs/pxteditor.js","/docs/pxtsim.js","/docs/pxtembed.js","/docs/pxtworker.js","/docs/pxtweb.js","/docs/blockly.css","/docs/semantic.css","/docs/rtlsemantic.css","/docs/blockly/media/sprites.png","/docs/blockly/media/click.mp3","/docs/blockly/media/disconnect.wav","/docs/blockly/media/delete.mp3","/docs/vs/loader.js","/docs/vs/base/worker/workerMain.js","/docs/vs/basic-languages/bat/bat.js","/docs/vs/basic-languages/cpp/cpp.js","/docs/vs/basic-languages/python/python.js","/docs/vs/basic-languages/markdown/markdown.js","/docs/vs/editor/editor.main.css","/docs/vs/editor/editor.main.js","/docs/vs/editor/editor.main.nls.js","/docs/vs/language/json/jsonMode.js","/docs/vs/language/json/jsonWorker.js","/docs/smoothie/smoothie_compressed.js","/docs/images/Bars_black.gif","/docs/gifjs/gif.js","/docs/ai.0.js","/docs/target.js","/docs/fieldeditors.js","/docs/editor.js","","@targetUrl@/docs/monacoworker.js","@targetUrl@/docs/worker.js"],l=b(""),i=b("%2Fdocs%2Fdocs%2Fstatic%2Flogo.png;%2Fdocs%2Fdocs%2Fstatic%2Fhero.png"),o=c(e.concat(i).map(function(e){return e.trim()}).filter(function(e){return!!e&&0!==e.indexOf("@")})),a=!1;function c(e){for(var n=[],t=0,r=e;t<r.length;t++){var s=r[t];-1===n.indexOf(s)&&n.push(s)}return n}function b(e){var n=String.fromCharCode(64)+"cdnUrl"+String.fromCharCode(64);return c(e.split(";").map(function(e){return decodeURIComponent(e).replace(n,t).trim()}))}self.addEventListener("install",function(e){n?(a=!0,console.log("Installing service worker..."),e.waitUntil(caches.open(s).then(function(e){return console.log("Opened cache"),console.log("Caching:\n"+o.join("\n")),e.addAll(o).then(function(){return e})}).then(function(e){return e.addAll(l).catch(function(e){console.log("Failed to cache hexfiles")})}).then(function(){return self.skipWaiting()}))):console.log("Skipping service worker install for unnamed endpoint")}),self.addEventListener("activate",function(e){n?(console.log("Activating service worker..."),e.waitUntil(caches.keys().then(function(e){var n=e.filter(function(e){var n,t=3!==(n=e.split(";")).length?null:n[1];return null===t||t===r&&e!==s});return Promise.all(n.map(function(e){return caches.delete(e)}))}).then(function(){return a?(a=!1,(e=self).clients.claim().then(function(){return e.clients.matchAll()}).then(function(e){e.forEach(function(e){return e.postMessage({type:"serviceworker",state:"activated",ref:r})})})):Promise.resolve();var e}))):console.log("Skipping service worker activate for unnamed endpoint")}),self.addEventListener("fetch",function(n){n.respondWith(caches.match(n.request).then(function(e){return e||fetch(n.request)}))})}initWebappServiceWorker();